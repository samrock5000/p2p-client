name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build binary
        working-directory: examples
        run: cargo build --release --verbose

      - name: Rename binary for platform
        shell: bash
        working-directory: examples
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            mv target/release/watch-demo target/release/watch-demo-linux
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            mv target/release/watch-demo target/release/watch-demo-macos
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv target/release/watch-demo.exe target/release/watch-demo-windows.exe
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: matrix.os == 'ubuntu-latest' # Only create release once
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.os == 'ubuntu-latest' && 'examples/target/release/watch-demo-linux' || matrix.os == 'macos-latest' && 'examples/target/release/watch-demo-macos' || 'examples/target/release/watch-demo-windows.exe' }}
          asset_name: ${{ matrix.os == 'ubuntu-latest' && 'watch-demo-linux' || matrix.os == 'macos-latest' && 'watch-demo-macos' || 'watch-demo-windows.exe' }}
          asset_content_type: application/octet-stream
